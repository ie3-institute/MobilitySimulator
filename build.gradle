plugins {
  id 'groovy' // groovy support
  id 'java' // java support
  id 'scala' // scala support
  id 'pmd' // code check, working on source code
  id 'com.diffplug.spotless' version '6.25.0'//code format
  id "de.undercouch.download" version "5.6.0" // downloads plugin
  id "org.sonarqube" version "5.1.0.4882" // sonarqube
  id "org.scoverage" version "8.1" // scala code coverage scoverage
  id "com.github.maiflai.scalatest" version "0.32" // run scalatest without specific spec task
  id 'maven-publish' // publish to a maven repo (local or mvn central, has to be defined)
  id "com.github.johnrengelman.shadow" version "8.1.1"
}

ext {
  javaVersion = JavaVersion.VERSION_17

  scalaVersion = '2.13'
  pekkoVersion = '1.1.2'
  scalaBinaryVersion = '2.13.15'
  slf4jVersion = '1.7.30'
  log4j2Version = '2.14.1'
  tscfgVersion = '1.1.3'
  scapegoatVersion = '3.1.0'

  scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator // location of script plugins
}

apply from: scriptsLocation + 'tscfg.gradle' // config tasks
apply from: scriptsLocation + 'pmd.gradle'
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'sonarqube.gradle' // sonarqube config
apply from: scriptsLocation + 'scoverage.gradle' // scoverage scala code coverage

repositories {
  mavenCentral() // searches in Sonatype's central repository
  maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots' } // sonatype snapshot repo
}

dependencies {
  implementation('com.github.ie3-institute:PowerSystemUtils:2.2.1') {
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    /* Exclude our own nested dependencies */
    exclude group: 'com.github.ie3-institute'
  }
  implementation('com.github.ie3-institute:PowerSystemDataModel:5.1.0') {
    exclude group: 'org.apache.logging.log4j'
    exclude group: 'org.slf4j'
    /* Exclude our own nested dependencies */
    exclude group: 'com.github.ie3-institute'
  }

  implementation 'com.github.ie3-institute:simonaAPI:0.5.0'

  implementation 'tech.units:indriya:2.2' // Physical units
  implementation "org.typelevel:squants_${scalaVersion}:1.8.3"
  implementation 'org.locationtech.jts.io:jts-io-common:1.20.0' // Location specific stuff
  implementation 'commons-io:commons-io:2.17.0' // I/O functionalities
  implementation 'com.nrinaudo:kantan.csv-generic_2.13:0.7.0' // csv parsing

  /* CORE Scala */
  implementation "org.scala-lang:scala-library:${scalaBinaryVersion}"
  implementation 'org.scala-lang.modules:scala-parallel-collections_2.13:1.0.4'

  /* CORE pekko */
  testImplementation "org.apache.pekko:pekko-actor_${scalaVersion}:${pekkoVersion}"

  /* Logging */
  implementation 'ch.qos.logback:logback-classic:1.5.10'
  implementation "com.typesafe.scala-logging:scala-logging_${scalaVersion}:3.9.5" // pekko scala logging

  /* Scala compiler plugin for static code analysis */
  implementation "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:${scapegoatVersion}"
  scalaCompilerPlugins(
      "com.sksamuel.scapegoat:scalac-scapegoat-plugin_${scalaBinaryVersion}:${scapegoatVersion}"
      )

  /* config */
  implementation 'com.typesafe:config:1.4.3'
  implementation "com.github.carueda:tscfg_2.13:$tscfgVersion"
  implementation "com.github.scopt:scopt_${scalaVersion}:4.1.0" // cmd args parser

  /* Testing */
  testImplementation "org.scalatest:scalatest_$scalaVersion:3.2.19"
  testRuntimeOnly 'com.vladsch.flexmark:flexmark-all:0.64.8' // scalatest html output
}

group = 'edu.ie3'
version = '1.0-SNAPSHOT'
description = 'MobilitySimulator'

shadowJar {
  zip64 = true
}

// scapegoat hook configuration
// https://github.com/sksamuel/scapegoat
// using compileScala instead of tasks.withType(ScalaCompile) prevents applying scapegoat to scala test classes
// see https://docs.gradle.org/current/userguide/scala_plugin.html#sec:configure_scala_classpath for details
tasks.withType(ScalaCompile) {
  scalaCompileOptions.additionalParameters = [
    "-Xplugin:" + configurations.scalaCompilerPlugins.asPath,
    "-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/src/",
    "-P:scapegoat:disabledInspections:VariableShadowing",
    "-P:scapegoat:ignoredFiles:.*/SimonaConfig.scala" // see scapegoat-sbt page for this param
  ]
}

// separate scapegoat report for test classes
compileTestScala {
  scalaCompileOptions.additionalParameters = [
    "-Xplugin:" + configurations.scalaCompilerPlugins.asPath,
    "-P:scapegoat:dataDir:" + buildDir + "/reports/scapegoat/testsrc/",
    "-P:scapegoat:disabledInspections:VariableShadowing"
  ]
}